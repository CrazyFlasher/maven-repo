<?xml version="1.0"?>
<project name="domwires-builder" basedir="" default="package_swc">

	<property environment="env."/>
	<property name="FLEX_HOME" location="${env.FLEX_HOME}"/>
	<property name="FLASH_PLAYER_EXE" location="${env.FLASH_PLAYER_EXE}"/>
	<property name="FLASH_IDE_EXE" location="${env.FLASH_IDE_EXE}"/>
    <property name="version" value="0.9.0"/>
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />

    <dirname property="imported.basedir" file="${user.home}/.m2/repository/com/domwires/builder/${version}"/>
    <property file="${imported.basedir}/server.properties"/>

    <property name="sftp-path-suffix" value=""/>
    <property name="src" value="${basedir}/src"/>
    <property name="out" value="${basedir}/out"/>
    <property name="deploy.dir" location="${out}"/>
    <property name="doc" value="${out}/doc"/>
    <property name="swc" value="${out}/swc"/>
    <property name="swf" value="${out}/swf"/>
    <!--<property name="maven.deploy.repo" value="https://raw.github.com/CrazyFlasher/maven-repo/master"/>-->

    <property name="flexunit" location="${user.home}/.m2/repository/org/apache/flexunit/${flexunit.version}"/>

    <taskdef resource="flexUnitTasks.tasks" classpath="${flexunit}/flexUnitTasks-${flexunit.version}-20140410.jar"/>

    <!--<target name="package_fat_swc" depends="clean,fat-swc,asdoc,test"/>-->

    <!--Dependencies-->
    <property name="dependencies_path" location="${user.home}/.m2/repository/"/>

    <target name="package_swc" depends="clean,swc,test,asdoc"/>
    <target name="asdoc">
        <delete dir="${doc}"/>
        <asdoc output="${doc}" dir="${FLEX_HOME}/frameworks" lenient="true" failonerror="true">
            <doc-sources path-element="${src}"/>
            <external-library-path dir="${dependencies_path}" includes="**/*.swc"/>
            <external-library-path dir="${dependencies_path}" includes="**/*.ane"/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs/player/${target-player}" includes="**/*.swc"/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs/air" includes="**/*.swc"/>
            <define name="CONFIG::debug" value="true" />
        </asdoc>
        <zip destfile="${swc}/${swc_name}" update="true">
            <zipfileset dir="${doc}" prefix="docs">
                <include name="*.*"/>
                <exclude name="ASDoc_Config.xml"/>
                <exclude name="overviews.xml"/>
            </zipfileset>
        </zip>
        <delete dir="${doc}"/>
    </target>
    <target name="swc">
        <mkdir dir="${swc}"/>
        <compc output="${swc}/${swc_name}">
            <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
            <include-sources dir="${src}" includes="*/**"/>
            <external-library-path dir="${dependencies_path}" includes="**/*"/>
            <!--<external-library-path dir="${dependencies_path}" includes="**/*.ane"/>-->
            <external-library-path dir="${FLEX_HOME}/frameworks/libs/player/${target-player}" includes="*"/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs/air" includes="*"/>
        </compc>
    </target>
    <!--<target name="fat-swc">-->
        <!--<compc output="${swc}/${swc_fat_name}">-->
            <!--<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>-->
            <!--<include-sources dir="${src}" includes="*"/>-->
            <!--<external-library-path dir="${FLEX_HOME}/frameworks/libs/player/${target-player}" includes="*"/>-->
            <!--<external-library-path dir="${FLEX_HOME}/frameworks/libs/air" includes="*"/>-->
        <!--</compc>-->
    <!--</target>-->
    <!--<target name="swf">-->
        <!--<mkdir dir="${swf}"/>-->
        <!--<mxmlc-->
                <!--file="${src}/StartUp.as"-->
                <!--output="${out}/tests/TestRunner.swf"-->
                <!--fork="true"-->
                <!--failonerror="true"-->
                <!--debug="${debug}"-->
        <!--&gt;-->
            <!--<source-path path-element="${src}"/>-->
            <!--<source-path path-element="${FLEX_HOME}/frameworks"/>-->
            <!--<library-path dir="${dependencies_path}" includes="**/*" append="true"/>-->
            <!--&lt;!&ndash;<library-path dir="${FLEX_HOME}/frameworks/libs/player/${target-player}" includes="*"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<library-path dir="${FLEX_HOME}/frameworks/libs/air" includes="*"/>&ndash;&gt;-->
            <!--<keep-as3-metadata name="Autowired"/>-->
            <!--<keep-as3-metadata name="PostConstruct"/>-->

        <!--</mxmlc>-->
        <!--<java jar="${FLEX_HOME}/lib/mxmlc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">-->
            <!--<arg value="${src}/StartUp.as"/>-->
            <!--<arg value="-source-path+=${src}"/>-->
            <!--<arg value="-swf-version=${swf-version}"/>-->
            <!--<arg value="-library-path+=${dependencies_path}"/>-->
            <!--<arg value="-target-player=${target-player}"/>-->
            <!--<arg value="-output=${swf}/${swf_name}.swf"/>-->
            <!--<arg value="-frame=two,${main_class}"/>-->
            <!--<arg value="-keep-as3-metadata+=Autowired"/>-->
            <!--<arg value="-keep-as3-metadata+=PostConstruct"/>-->
            <!--<arg value="-compiler.advanced-telemetry=${debug}"/>-->
            <!--<arg value="-debug=${debug}"/>-->
        <!--</java>-->
    <!--</target>-->
    <target name="test">
        <mkdir dir="${out}/tests/report/html"/>
        <mxmlc
            file="${basedir}/tests/TestSuite.as"
            output="${out}/tests/TestRunner.swf"
            fork="true"
            failonerror="true"
            debug="false"
        >
            <source-path path-element="${src}"/>
            <source-path path-element="${FLEX_HOME}/frameworks"/>
            <library-path dir="${flexunit}" includes="**/*" append="true"/>
            <library-path dir="${dependencies_path}" includes="**/*" append="true"/>
            <!--<library-path dir="${FLEX_HOME}/frameworks/libs/player/${target-player}" includes="*"/>-->
            <!--<library-path dir="${FLEX_HOME}/frameworks/libs/air" includes="*"/>-->
            <keep-as3-metadata name="Autowired"/>
            <keep-as3-metadata name="PostConstruct"/>
        </mxmlc>
        <!--<java jar="${FLEX_HOME}/lib/mxmlc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">-->
            <!--<arg value="${basedir}/tests/TestSuite.as"/>-->
            <!--<arg value="-source-path+=${src}"/>-->
            <!--<arg value="-swf-version=${swf-version}"/>-->
            <!--<arg value="-library-path+=${flexunit}"/>-->
            <!--<arg value="-library-path+=${dependencies_path}/**/*"/>-->
            <!--&lt;!&ndash;<arg value="-library-path+=${as3-signals}"/>&ndash;&gt;-->
            <!--<arg value="-output=${out}/tests/TestRunner.swf"/>-->
            <!--<arg value="-keep-as3-metadata+=Autowired"/>-->
            <!--<arg value="-keep-as3-metadata+=PostConstruct"/>-->
            <!--<arg value="-debug=false"/>-->
        <!--</java>-->
        <flexunit
                command="${FLASH_PLAYER_EXE}"
                player="flash"
                swf="${out}/tests/TestRunner.swf"
                toDir="${out}/tests/report"
                haltonfailure="false"
                verbose="true"
                localTrusted="true"
                failureproperty="flexunit.failure"
        />
        <junitreport todir="${out}/tests/report">
            <fileset dir="${out}/tests/report">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${out}/tests/report/html"/>
        </junitreport>
        <fail if="flexunit.failure" message="Unit test(s) failed. See reports!"/>
    </target>
    <target name="check-flexunit">
        <available file="${flexunit}/flexUnitTasks-${flexunit.version}-20140410.jar" property="flexunit.present"/>
    </target>
    <target name="prepare-flexunit" depends="check-flexunit" unless="flexunit.present">
        <unzip src="${flexunit}/flexunit-${flexunit.version}.zip" dest="${flexunit}"/>
        <taskdef resource="flexUnitTasks.tasks" classpath="${flexunit}/flexUnitTasks-${flexunit.version}-20140410.jar"/>
    </target>
    <target name="prepare" depends="-init-ooo">
        <mavendep pom="pom.xml"/>
    </target>
    <target name="clean">
        <delete dir="${out}"/>
    </target>
    <!--<target name="increase_minor_version">-->
        <!--<propertyfile file="version.properties">-->
            <!--<entry key="build.minor.number" type="int" operation="+" value="1" pattern="0" />-->
        <!--</propertyfile>-->
    <!--</target>-->
    <!--<target name="increase_major_version">-->
        <!--<propertyfile file="version.properties">-->
            <!--<entry key="build.major.number" type="int" operation="+" value="1" pattern="0" />-->
            <!--<entry key="build.minor.number" type="int" operation="=" value="0" pattern="0" />-->
        <!--</propertyfile>-->
    <!--</target>-->
    <!--<target name="increase_release_version">-->
    <!--<propertyfile file="version.properties">-->
        <!--<entry key="build.release.number" type="int" operation="+" value="1" pattern="0" />-->
        <!--<entry key="build.major.number" type="int" operation="=" value="0" pattern="0" />-->
        <!--<entry key="build.minor.number" type="int" operation="=" value="0" pattern="0" />-->
    <!--</propertyfile>-->
    <!--</target>-->
    <!--<target name="upload_docs">-->
        <!--<sshexec host="${sftp-host}"-->
                 <!--username="${sftp-login}"-->
                 <!--password="${sftp-password}"-->
                 <!--command="${sftp-script-path} ${sftp-path}/${sftp-path-suffix}/doc"-->
                 <!--trust="true"-->
        <!--/>-->
        <!--<scp todir="${sftp-login}:${sftp-password}@${sftp-host}:${sftp-path}/${sftp-path-suffix}/doc" trust="true">-->
            <!--<fileset dir="${doc}"/>-->
        <!--</scp>-->
    <!--</target>-->
    <!--<target name="upload_swc">-->
        <!--<zip destfile="${swc}/${ant.project.name}_latest.zip"-->
             <!--basedir="${swc}"-->
             <!--includes="*.swc"-->
        <!--/>-->
        <!--<scp file="${swc}/${ant.project.name}_latest.zip" todir="${sftp-login}:${sftp-password}@${sftp-host}:${sftp-path}/${sftp-path-suffix}"-->
             <!--trust="true"/>-->
        <!--<delete file="${swc}/${ant.project.name}_latest.zip"/>-->
    <!--</target>-->

    <!--//////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Set maven.deploy.repo to deploy to a local maven repo:
        ant -Dmaven.deploy.repo=file:///path/to/local/repo maven-deploy -->
    <target name="maven-deploy" depends="prepare">
        <mavendeploy file="${swc}/${swc_name}" pom="pom.xml"/>
        <!--<maveninstall file="${swc}/${swc_name}" pom="pom.xml"/>-->
    </target>

</project>
