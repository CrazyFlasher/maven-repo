<?xml version="1.0"?>
<project name="domwires-builder" basedir="" default="package_swc">

	<property environment="env."/>
	<property name="FLEX_HOME" location="${env.FLEX_HOME}"/>
	<property name="FLASH_PLAYER_EXE" location="${env.FLASH_PLAYER_EXE}"/>
	<property name="FLASH_IDE_EXE" location="${env.FLASH_IDE_EXE}"/>
    <property name="compc.jar" value="${FLEX_HOME}/lib/compc.jar"/>

    <property name="flexunit.version" value="4.2.0"/>

	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />

    <property name="flashDep" value="${user.home}/.m2/repository/com/crazyfm/tools/flashDep/0.1.0/flashDep-0.1.0.jar"/>

    <property name="sftp-path-suffix" value=""/>
    <property name="src" value="${basedir}/src"/>
    <property name="out" value="${basedir}/out"/>
    <property name="deploy.dir" location="dist"/>
    <property name="doc" value="${out}/doc"/>
    <property name="swc" value="${out}/swc"/>
    <property name="swf" value="${out}/swf"/>
    <property name="debug" value="false"/>
    <property name="pom" value="pom.xml"/>
    <!--<property name="maven.deploy.repo" value="https://raw.github.com/CrazyFlasher/maven-repo/master"/>-->

    <property name="flexunit" location="${user.home}/.m2/repository/org/apache/flexunit/${flexunit.version}"/>

    <taskdef resource="flexUnitTasks.tasks" classpath="${flexunit}/flexUnitTasks-${flexunit.version}-20140410.jar"/>

    <target name="package_swc" depends="clean,swc,test,asdoc,maven-deploy"/>
    <target name="asdoc" depends="build_dep_paths">
        <delete dir="${doc}"/>
        <java jar="${FLEX_HOME}/lib/asdoc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
            <arg value="-doc-sources=${src}"/>
            <arg value="-output=${doc}"/>
            <arg value="-external-library-path+=${FLEX_HOME}/frameworks/libs/air,${FLEX_HOME}/frameworks/libs/air,${dependencies}"/>
            <arg value="-define=CONFIG::debug,true"/>
        </java>
        <zip destfile="${swc}/${swc_name}" update="true">
            <zipfileset dir="${doc}" prefix="docs">
                <include name="*.*"/>
                <exclude name="ASDoc_Config.xml"/>
                <exclude name="overviews.xml"/>
            </zipfileset>
        </zip>
        <delete dir="${doc}"/>
    </target>
    <target name="swc" depends="build_dep_paths">
        <fileset id="sources" dir="${src}">
            <include name="**/*.as" />
        </fileset>
        <pathconvert property="classes" pathsep="," refid="sources"/>
        <java jar="${FLEX_HOME}/lib/compc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
            <!--TODO: include sources-->
            <arg value="-output=${swc}/${swc_name}"/>
            <arg value="-source-path=${src}"/>
            <arg value="-include-sources+=${classes}"/>
            <arg value="-external-library-path+=${FLEX_HOME}/frameworks/libs/air,${FLEX_HOME}/frameworks/libs/air,${dependencies}"/>
            <arg value="-debug=${debug}"/>
            <arg value="-define=CONFIG::debug,${debug}"/>
        </java>
    </target>
    <target name="build_dep_paths">
        <java jar="${flashDep}" fork="true" failonerror="true">
            <arg value="${deploy.dir}/"/>
            <arg value="${pom}.dependencies"/>
        </java>
        <property file="${deploy.dir}/dependencies.properties"/>
    </target>
    <target name="test" depends="build_dep_paths,prepare-flexunit">
        <mkdir dir="${out}/tests/report/html"/>
        <java jar="${FLEX_HOME}/lib/mxmlc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
            <arg value="${basedir}/tests/TestSuite.as"/>
            <arg value="-source-path+=${src}"/>
            <arg value="-swf-version=${swf-version}"/>
            <arg value="-library-path+=${flexunit},${dependencies}"/>
            <arg value="-output=${out}/tests/TestRunner.swf"/>
            <arg value="-keep-as3-metadata+=Autowired"/>
            <arg value="-keep-as3-metadata+=PostConstruct"/>
            <arg value="-debug=false"/>
        </java>
        <flexunit
                command="${FLASH_PLAYER_EXE}"
                player="flash"
                swf="${out}/tests/TestRunner.swf"
                toDir="${out}/tests/report"
                haltonfailure="false"
                verbose="true"
                localTrusted="true"
                failureproperty="flexunit.failure"
        />
        <junitreport todir="${out}/tests/report">
            <fileset dir="${out}/tests/report">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${out}/tests/report/html"/>
        </junitreport>
        <fail if="flexunit.failure" message="Unit test(s) failed. See reports!"/>
    </target>
    <target name="check-flexunit">
        <available file="${flexunit}/flexUnitTasks-${flexunit.version}-20140410.jar" property="flexunit.present"/>
    </target>
    <target name="prepare-flexunit" depends="check-flexunit" unless="flexunit.present">
        <unzip src="${flexunit}/flexunit-${flexunit.version}.zip" dest="${flexunit}"/>
        <taskdef resource="flexUnitTasks.tasks" classpath="${flexunit}/flexUnitTasks-${flexunit.version}-20140410.jar"/>
    </target>
    <target name="prepare" depends="-init-ooo">
        <delete dir="${deploy.dir}"/>
        <mavendep pom="${pom}"/>
    </target>
    <target name="clean">
        <delete dir="${out}"/>
    </target>
    <!--<target name="increase_minor_version">-->
        <!--<propertyfile file="version.properties">-->
            <!--<entry key="build.minor.number" type="int" operation="+" value="1" pattern="0" />-->
        <!--</propertyfile>-->
    <!--</target>-->
    <!--<target name="increase_major_version">-->
        <!--<propertyfile file="version.properties">-->
            <!--<entry key="build.major.number" type="int" operation="+" value="1" pattern="0" />-->
            <!--<entry key="build.minor.number" type="int" operation="=" value="0" pattern="0" />-->
        <!--</propertyfile>-->
    <!--</target>-->
    <!--<target name="increase_release_version">-->
    <!--<propertyfile file="version.properties">-->
        <!--<entry key="build.release.number" type="int" operation="+" value="1" pattern="0" />-->
        <!--<entry key="build.major.number" type="int" operation="=" value="0" pattern="0" />-->
        <!--<entry key="build.minor.number" type="int" operation="=" value="0" pattern="0" />-->
    <!--</propertyfile>-->
    <!--</target>-->
    <!--<target name="upload_docs">-->
        <!--<sshexec host="${sftp-host}"-->
                 <!--username="${sftp-login}"-->
                 <!--password="${sftp-password}"-->
                 <!--command="${sftp-script-path} ${sftp-path}/${sftp-path-suffix}/doc"-->
                 <!--trust="true"-->
        <!--/>-->
        <!--<scp todir="${sftp-login}:${sftp-password}@${sftp-host}:${sftp-path}/${sftp-path-suffix}/doc" trust="true">-->
            <!--<fileset dir="${doc}"/>-->
        <!--</scp>-->
    <!--</target>-->
    <!--<target name="upload_swc">-->
        <!--<zip destfile="${swc}/${ant.project.name}_latest.zip"-->
             <!--basedir="${swc}"-->
             <!--includes="*.swc"-->
        <!--/>-->
        <!--<scp file="${swc}/${ant.project.name}_latest.zip" todir="${sftp-login}:${sftp-password}@${sftp-host}:${sftp-path}/${sftp-path-suffix}"-->
             <!--trust="true"/>-->
        <!--<delete file="${swc}/${ant.project.name}_latest.zip"/>-->
    <!--</target>-->

    <!--//////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Set maven.deploy.repo to deploy to a local maven repo:
        ant -Dmaven.deploy.repo=file:///path/to/local/repo maven-deploy -->
    <target name="maven-deploy" depends="prepare">
        <mavendeploy file="${swc}/${swc_name}" pom="${pom}"/>
        <!--<maveninstall file="${swc}/${swc_name}" pom="${pom}"/>-->
    </target>
</project>
